{"version":3,"sources":["components/contexts/Connections.js","components/table/Table.js","components/styled-components/index.js","components/misc/Loading.js","classes/Http.js","components/Database.js","components/Start.js","components/Routes.js","components/App.js","index.js"],"names":["ConnectionsContext","createContext","ConnectionsContextProvider","children","useState","JSON","parse","localStorage","getItem","connections","setConnections","useEffect","setItem","stringify","Provider","value","Table","className","props","classes","createUseStyles","table","position","width","styles","classnames","Row","styled","div","Col","ButtonOutline","button","PrimaryTitle","h1","StyledContainer","Container","scroll","style","overflowX","Loading","spinner","size","spin","opacity","database","animation","loading","color","margin","transform","left","top","path","mdiLoading","mdiDatabase","Http","method","url","args","headers","standard","Accept","fetch","response","data","json","console","error","code","status","request","Database","tableLinks","marginRight","tableLink","backgroundColor","textDecoration","fontSize","textAlign","cursor","marginBottom","padding","border","fontWeight","rows","maxWidth","tableWrapper","useContext","useParams","name","activeTable","page","columns","setColumns","tables","setTables","setRows","loadingDatabase","setLoadingDatabase","loadingRows","setLoadingRows","setError","a","log","get","getRows","getColumns","as","map","to","actions","length","Start","start","NavLink","Routes","exact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f48d8ba.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const ConnectionsContext = createContext();\r\n\r\nexport function ConnectionsContextProvider({ children }) {\r\n    const [connections, setConnections] = useState(JSON.parse(localStorage.getItem('connections')) ?? []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('connections', JSON.stringify(connections));\r\n    }, [connections]);\r\n\r\n    return (\r\n        <ConnectionsContext.Provider value={{ connections, setConnections }}>\r\n            {children}\r\n        </ConnectionsContext.Provider>\r\n    );\r\n}","import { createUseStyles } from 'react-jss';\r\nimport classnames from 'classnames';\r\nimport React from 'react';\r\n\r\nexport default function Table({ children, className, ...props }) {\r\n    const styles = createUseStyles({\r\n        table: {\r\n            position: 'relative',\r\n            width: '80vw',\r\n        },\r\n    });\r\n    const classes = styles();\r\n\r\n    return (\r\n        <table className={classnames(classes.table, className)} {...props}>\r\n            {children}\r\n        </table>\r\n    );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst Row = styled.div`\r\n    flex-direction: row;\r\n    display: flex;\r\n`;\r\n\r\nconst Col = styled.div`\r\n    flex-direction: column;\r\n    display: flex;\r\n`;\r\n\r\nconst ButtonOutline = styled.button`\r\n    border: 2px solid var(--color-primary);\r\n    transition: all 0.05s ease-in-out;\r\n    box-shadow: 0 0 5px 0 black;\r\n    color: var(--color-primary);\r\n    text-decoration: none;\r\n    display: inline-flex;\r\n    border-radius: 4px;\r\n    font-weight: bold;\r\n    user-select: none;\r\n    background: none;\r\n    font-size: 1rem;\r\n    cursor: pointer;\r\n    padding: 15px;\r\n    outline: 0;\r\n    &:hover {\r\n        background-color: rgba(0, 0, 0, 0.35);\r\n        color: white;\r\n    }\r\n`;\r\n\r\nconst PrimaryTitle = styled.h1`\r\n    color: var(--color-primary);\r\n    margin-bottom: 15px;\r\n    font-weight: bold;\r\n    display: flex;\r\n    font-size: 2rem;\r\n    & svg {\r\n        margin-right: 5px;\r\n        width: 2rem;\r\n    }\r\n`;\r\n\r\nconst StyledContainer = styled.div`\r\n    margin: var(--container-margin);\r\n    flex-direction: column;\r\n    display: flex;\r\n    &.center-children {\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n`;\r\nconst Container = ({ children, scroll = false, ...props }) => (\r\n    <StyledContainer style={{ overflowX: scroll ? 'auto' : null }} {...props}>\r\n        {children}\r\n    </StyledContainer>\r\n);\r\n\r\nexport {\r\n    ButtonOutline,\r\n    PrimaryTitle,\r\n    Container,\r\n    Col,\r\n    Row,\r\n};\r\n","import { mdiDatabase, mdiLoading } from '@mdi/js';\r\nimport { createUseStyles } from 'react-jss';\r\nimport classnames from 'classnames';\r\nimport Icon from '@mdi/react';\r\nimport React from 'react';\r\n\r\nexport default function Loading({ spinner = false, size = 2, spin = 1, className = '', ...props }) {\r\n    const styles = createUseStyles({\r\n        '@keyframes pulse': {\r\n            '0%': { opacity: 1 },\r\n            '50%': { opacity: 0.1 },\r\n            '100%': { opacity: 1 },\r\n        },\r\n        database: {\r\n            animation: '$pulse 1.5s infinite',\r\n        },\r\n        loading: {\r\n            color: 'var(--color-primary)',\r\n            margin: 'auto',\r\n            '&.center': {\r\n                transform: 'translate(-50%, -50%)',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n            },\r\n        },\r\n    });\r\n    const classes = styles();\r\n\r\n    if (spinner) {\r\n        return <Icon className={classnames(classes.loading, className)} path={mdiLoading} size={size} spin={spin} {...props} />\r\n    }\r\n\r\n    return (\r\n        <Icon className={classnames(classes.database, classes.loading, className)} path={mdiDatabase} size={size} {...props} />\r\n    );\r\n}\r\n","export default class Http {\r\n    static async request(method = 'get', url = '', args = null, headers = null) {\r\n        const standard = {\r\n            method: method,\r\n            headers: {\r\n                Accept: 'application/json',\r\n                ...headers,\r\n            },\r\n        };\r\n        const response = await fetch(url, { ...args, ...standard });\r\n        let data = [];\r\n        try {\r\n            data = await response.json();\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n        return { data: data, code: response.status, response: response };\r\n    }\r\n\r\n    static async get(url, args, headers) {\r\n        return await Http.request('get', url, args, headers);\r\n    }\r\n\r\n    static async post(url, args, headers) {\r\n        return await Http.request('post', url, args, headers);\r\n    }\r\n\r\n    static async put(url, args, headers) {\r\n        return await Http.request('put', url, args, headers);\r\n    }\r\n\r\n    static async patch(url, args, headers) {\r\n        return await Http.request('patch', url, args, headers);\r\n    }\r\n\r\n    static async delete(url, args, headers) {\r\n        return await Http.request('delete', url, args, headers);\r\n    }\r\n}\r\n","import { Table, TableHead, TableHeader, TableBody, TableRow, TableCell } from './table';\r\nimport { Container, PrimaryTitle, Row, Col } from './styled-components';\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { NavLink, useParams } from 'react-router-dom';\r\nimport { mdiDatabase, mdiLoading } from '@mdi/js';\r\nimport { ConnectionsContext } from './contexts';\r\nimport { createUseStyles } from 'react-jss';\r\nimport Loading from './misc/Loading';\r\nimport classnames from 'classnames';\r\nimport { Http } from '../classes';\r\nimport Icon from '@mdi/react';\r\n\r\nexport default function Database() {\r\n    const styles = createUseStyles({\r\n        tableLinks: {\r\n            marginRight: 10,\r\n        },\r\n        tableLink: {\r\n            backgroundColor: 'var(--table-primary)',\r\n            textDecoration: 'none',\r\n            fontSize: '1.25rem',\r\n            textAlign: 'left',\r\n            cursor: 'pointer',\r\n            marginBottom: 2,\r\n            padding: 15,\r\n            border: 0,\r\n            '&:hover': {\r\n                backgroundColor: 'var(--table-secondary)',\r\n            },\r\n            '&.active': {\r\n                backgroundColor: 'var(--color-primary-dark)',\r\n                color: 'var(--color-primary)',\r\n                fontWeight: 'bold',\r\n            },\r\n            '&:last-child': {\r\n                marginBottom: 0,\r\n            },\r\n        },\r\n        rows: {\r\n            maxWidth: 'calc(100vw - var(--container-margin))',\r\n            position: 'relative',\r\n            overflowX: 'auto',\r\n        },\r\n        tableWrapper: {\r\n            position: 'relative',\r\n            width: '80vw',\r\n        },\r\n    });\r\n    const classes = styles();\r\n\r\n    const { setConnections } = useContext(ConnectionsContext);\r\n    const { name, activeTable, page } = useParams();\r\n\r\n    const [columns, setColumns] = useState([]);\r\n    const [tables, setTables] = useState([]);\r\n    const [rows, setRows] = useState([]);\r\n\r\n    const [loadingDatabase, setLoadingDatabase] = useState(true);\r\n    const [loadingRows, setLoadingRows] = useState(true);\r\n    const [error, setError] = useState();\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n        console.log('go');\r\n            setLoadingDatabase(true);\r\n            const { code, data } = await Http.get(`/databases/${name}`);\r\n            console.log(code, data);\r\n            setLoadingDatabase(false);\r\n            setTables(data);\r\n            if (code < 200 || code >= 300) {\r\n                setError('Something went wrong loading the database');\r\n            }\r\n        })();\r\n    }, [name]);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setLoadingRows(true);\r\n            async function getRows() {\r\n                const { code, data } = await Http.get(`/databases/${name}/${activeTable}`);\r\n                setRows(data);\r\n                if (code < 200 || code >= 300) {\r\n                    setError('Something went wrong loading the table rows');\r\n                }\r\n            }\r\n            async function getColumns() {\r\n                const { code, data } = await Http.get(`/databases/${name}/${activeTable}/columns`);\r\n                setColumns(data);\r\n                if (code < 200 || code >= 300) {\r\n                    setError('Something went wrong loading the table columns');\r\n                }\r\n            }\r\n            getColumns();\r\n            getRows();\r\n            setLoadingRows(false);\r\n        })();\r\n    }, [name, activeTable]);\r\n\r\n    return (\r\n        <Container>\r\n            {\r\n                loadingDatabase\r\n                    ? <Loading />\r\n                    : <>\r\n                        <PrimaryTitle>\r\n                            <Icon path={mdiDatabase} />\r\n                            <span>{name}</span>\r\n                        </PrimaryTitle>\r\n                        <Row className={classnames(classes.rows)}>\r\n                            <Col className={classnames(classes.tableLinks)} as=\"ul\">\r\n                                {\r\n                                    tables.map(({ table }) => (\r\n                                        <NavLink\r\n                                            className={classnames(classes.tableLink)}\r\n                                            to={`/database/${name}/${table}`}\r\n                                            key={table}\r\n                                        >\r\n                                            {table}\r\n                                        </NavLink>\r\n                                    ))\r\n                                }\r\n                            </Col>\r\n                            <div className={classnames(classes.tableWrapper)}>\r\n                                {\r\n                                    loadingRows\r\n                                        ? <Loading className=\"center\" />\r\n                                        : <Table columns={columns} rows={rows} actions={[]} />\r\n                                }\r\n                            </div>\r\n                        </Row>\r\n                    </>\r\n            }\r\n            {!loadingDatabase && !tables.length && <p className=\"errorText\">The database is completely empty</p>}\r\n            {error && <p className=\"errorText\">{error}</p>}\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useState, useRef, useEffect, useContext } from 'react';\r\nimport { ButtonOutline, Container } from './styled-components';\r\nimport { ConnectionsContext } from './contexts';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\n\r\nexport default function Start() {\r\n    const styles = createUseStyles({\r\n        start: {\r\n\r\n        },  \r\n    });\r\n    const classes = styles();\r\n\r\n    const { connections } = useContext(ConnectionsContext);\r\n\r\n    // console.log(connections);\r\n\r\n    return (\r\n        <Container className={classnames(classes.start, 'center-children')}>\r\n            <ButtonOutline as={NavLink} to=\"/database/tph\">Test TPH db</ButtonOutline>\r\n        </Container>\r\n    );\r\n}\r\n","import { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Route, Switch } from 'react-router';\r\nimport Database from './Database';\r\nimport Start from './Start';\r\nimport React from 'react';\r\n\r\nexport default function Routes() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                    <Route path=\"/database/:name/:activeTable?/:page?\" exact>\r\n                        <Database />\r\n                    </Route>\r\n                    <Route>\r\n                        <Start />\r\n                    </Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n","import { ConnectionsContextProvider } from './contexts';\nimport React, { useState, useEffect } from 'react';\nimport Routes from './Routes';\n\nexport default function App() {\n    return (\n        <ConnectionsContextProvider>\n            <Routes />\n        </ConnectionsContextProvider>\n    );\n}\n","import App from './components/App';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\n\nimport './styles/app.scss';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}