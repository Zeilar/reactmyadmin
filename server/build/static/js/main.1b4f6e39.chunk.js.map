{"version":3,"sources":["components/contexts/Connections.js","components/styled-components/index.js","components/misc/Loading.js","classes/Http.js","components/table/TableCell.js","components/table/TableRow.js","components/table/Table.js","components/Database.js","components/Start.js","components/Routes.js","components/App.js","index.js"],"names":["ConnectionsContext","createContext","ConnectionsContextProvider","children","useState","JSON","parse","localStorage","getItem","connections","setConnections","useEffect","setItem","stringify","Provider","value","Row","styled","div","Col","ButtonOutline","button","PrimaryTitle","h1","StyledContainer","Container","scroll","props","style","overflowX","Loading","spinner","size","spin","className","classes","createUseStyles","opacity","database","animation","loading","color","margin","transform","position","left","top","styles","classnames","path","mdiLoading","mdiDatabase","Http","method","url","args","headers","standard","Accept","fetch","response","data","json","console","error","code","status","request","TableCell","id","save","setRow","cell","textOverflow","overflow","maxWidth","padding","input","backgroundColor","display","resize","localState","setLocalState","type","onChange","e","target","p","Object","keys","find","key","onClick","TableRow","actions","row","log","parsed","property","cells","push","parseCells","Table","columns","rows","table","width","map","Math","random","Database","tableLinks","marginRight","tableLink","textDecoration","fontSize","textAlign","cursor","marginBottom","border","fontWeight","tableWrapper","useContext","useParams","name","activeTable","page","setColumns","tables","setTables","setRows","loadingDatabase","setLoadingDatabase","loadingRows","setLoadingRows","setError","saveRow","element","_id","a","get","length","getRows","getColumns","as","to","Start","start","NavLink","Routes","exact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b4f6e39.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const ConnectionsContext = createContext();\r\n\r\nexport function ConnectionsContextProvider({ children }) {\r\n    const [connections, setConnections] = useState(JSON.parse(localStorage.getItem('connections')) ?? []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('connections', JSON.stringify(connections));\r\n    }, [connections]);\r\n\r\n    return (\r\n        <ConnectionsContext.Provider value={{ connections, setConnections }}>\r\n            {children}\r\n        </ConnectionsContext.Provider>\r\n    );\r\n}","import styled from 'styled-components';\r\n\r\nconst Row = styled.div`\r\n    flex-direction: row;\r\n    display: flex;\r\n`;\r\n\r\nconst Col = styled.div`\r\n    flex-direction: column;\r\n    display: flex;\r\n`;\r\n\r\nconst ButtonOutline = styled.button`\r\n    border: 2px solid var(--color-primary);\r\n    transition: all 0.05s ease-in-out;\r\n    box-shadow: 0 0 5px 0 black;\r\n    color: var(--color-primary);\r\n    text-decoration: none;\r\n    display: inline-flex;\r\n    border-radius: 4px;\r\n    font-weight: bold;\r\n    user-select: none;\r\n    background: none;\r\n    font-size: 1rem;\r\n    cursor: pointer;\r\n    padding: 15px;\r\n    outline: 0;\r\n    &:hover {\r\n        background-color: rgba(0, 0, 0, 0.35);\r\n        color: white;\r\n    }\r\n`;\r\n\r\nconst PrimaryTitle = styled.h1`\r\n    color: var(--color-primary);\r\n    margin-bottom: 15px;\r\n    font-weight: bold;\r\n    display: flex;\r\n    font-size: 2rem;\r\n    & svg {\r\n        margin-right: 5px;\r\n        width: 2rem;\r\n    }\r\n`;\r\n\r\nconst StyledContainer = styled.div`\r\n    margin: var(--container-margin);\r\n    flex-direction: column;\r\n    display: flex;\r\n    &.center-children {\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n`;\r\nconst Container = ({ children, scroll = false, ...props }) => (\r\n    <StyledContainer style={{ overflowX: scroll ? 'auto' : null }} {...props}>\r\n        {children}\r\n    </StyledContainer>\r\n);\r\n\r\nexport {\r\n    ButtonOutline,\r\n    PrimaryTitle,\r\n    Container,\r\n    Col,\r\n    Row,\r\n};\r\n","import { mdiDatabase, mdiLoading } from '@mdi/js';\r\nimport { createUseStyles } from 'react-jss';\r\nimport classnames from 'classnames';\r\nimport Icon from '@mdi/react';\r\nimport React from 'react';\r\n\r\nexport default function Loading({ spinner = false, size = 2, spin = 1, className = '', ...props }) {\r\n    const styles = createUseStyles({\r\n        '@keyframes pulse': {\r\n            '0%': { opacity: 1 },\r\n            '50%': { opacity: 0.1 },\r\n            '100%': { opacity: 1 },\r\n        },\r\n        database: {\r\n            animation: '$pulse 1.5s infinite',\r\n        },\r\n        loading: {\r\n            color: 'var(--color-primary)',\r\n            margin: 'auto',\r\n            '&.center': {\r\n                transform: 'translate(-50%, -50%)',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n            },\r\n        },\r\n    });\r\n    const classes = styles();\r\n\r\n    if (spinner) {\r\n        return <Icon className={classnames(classes.loading, className)} path={mdiLoading} size={size} spin={spin} {...props} />\r\n    }\r\n\r\n    return (\r\n        <Icon className={classnames(classes.database, classes.loading, className)} path={mdiDatabase} size={size} {...props} />\r\n    );\r\n}\r\n","export default class Http {\r\n    static async request(method = 'get', url = '', args = null, headers = null) {\r\n        const standard = {\r\n            method: method,\r\n            headers: {\r\n                Accept: 'application/json',\r\n                ...headers,\r\n            },\r\n        };\r\n        const response = await fetch(url, { ...args, ...standard });\r\n        let data = [];\r\n        try {\r\n            data = await response.json();\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n        return { data: data, code: response.status, response: response };\r\n    }\r\n\r\n    static async get(url, args, headers) {\r\n        return await Http.request('get', url, args, headers);\r\n    }\r\n\r\n    static async post(url, args, headers) {\r\n        return await Http.request('post', url, args, headers);\r\n    }\r\n\r\n    static async put(url, args, headers) {\r\n        return await Http.request('put', url, args, headers);\r\n    }\r\n\r\n    static async patch(url, args, headers) {\r\n        return await Http.request('patch', url, args, headers);\r\n    }\r\n\r\n    static async delete(url, args, headers) {\r\n        return await Http.request('delete', url, args, headers);\r\n    }\r\n}\r\n","import useOnclickOutside from 'react-cool-onclickoutside';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport classnames from 'classnames';\r\n\r\nexport default function TableCell({ className = '', id = '', data = '', save, setRow, ...props }) {\r\n    const styles = createUseStyles({\r\n        cell: {\r\n            textOverflow: 'ellipsis',\r\n            overflow: 'hidden',\r\n            maxWidth: '20rem',\r\n            padding: 10,\r\n        },\r\n        input: {\r\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n            display: 'flex',\r\n            resize: 'none',\r\n            padding: 8,\r\n        },\r\n    });\r\n    const classes = styles();\r\n\r\n    const [localState, setLocalState] = useState(data);\r\n    const [editing, setEditing] = useState(false);\r\n\r\n    function onChangeHandler(e) {\r\n        setLocalState(e.target.value);\r\n\r\n        // Find the property whose key matches this cell's id\r\n        // Merge the new value into that slot of the new object\r\n        setRow(p => ({ ...p, [Object.keys(p).find(key => key === id)]: e.target.value }));\r\n    }\r\n\r\n    return (\r\n        <td className={classnames(classes.cell, className)} {...props}>\r\n            {data}\r\n            <input type=\"text\" value={localState} onChange={onChangeHandler} />\r\n            <button onClick={save}>save</button>\r\n        </td>\r\n    );\r\n}\r\n","import { createUseStyles } from 'react-jss';\r\nimport React, { useState } from 'react';\r\nimport classnames from 'classnames';\r\nimport { TableCell } from './';\r\n\r\nexport default function TableRow({ className = '', data = [], actions = [], ...props }) {\r\n    const styles = createUseStyles({\r\n        row: {\r\n            backgroundColor: 'var(--table-primary)',\r\n            '&:nth-child(odd)': {\r\n                backgroundColor: 'var(--table-secondary)',\r\n            },\r\n        },\r\n    });\r\n    const classes = styles();\r\n\r\n    const [row, setRow] = useState(data);\r\n\r\n    function parseCells() {\r\n        const parsed = {};\r\n        for (const property in row) {\r\n            if (property !== '_id') {\r\n                parsed[property] = row[property];\r\n            }\r\n        }\r\n\r\n        const cells = [];\r\n        for (const property in parsed) {\r\n            cells.push(<TableCell id={property} key={property} data={parsed[property]} save={save} setRow={setRow} />);\r\n        }\r\n        return cells;\r\n    }\r\n\r\n    function save() {\r\n        actions.save(row);\r\n        console.log('save', row);\r\n    }\r\n\r\n    return (\r\n        <tr className={classnames(classes.row, className)} {...props}>\r\n            {parseCells()}\r\n        </tr>\r\n    );\r\n}\r\n","import { TableBody, TableHead, TableRow, TableHeader } from './';\r\nimport { createUseStyles } from 'react-jss';\r\nimport React, { useState } from 'react';\r\nimport classnames from 'classnames';\r\n\r\nexport default function Table({ className = '', columns = [], rows = [], ...props }) {\r\n    const styles = createUseStyles({\r\n        table: {\r\n            position: 'relative',\r\n            width: '80vw',\r\n        },\r\n    });\r\n    const classes = styles();\r\n\r\n    return (\r\n        <table className={classnames(classes.table, className)} {...props}>\r\n            {rows.map(row => <TableRow key={Math.random()} data={row.data} actions={row.actions} />)}\r\n        </table>\r\n    );\r\n}\r\n","import { Container, PrimaryTitle, Row, Col } from './styled-components';\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { NavLink, useParams } from 'react-router-dom';\r\nimport { ConnectionsContext } from './contexts';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { mdiDatabase } from '@mdi/js';\r\nimport Loading from './misc/Loading';\r\nimport classnames from 'classnames';\r\nimport { Http } from '../classes';\r\nimport { Table } from './table';\r\nimport Icon from '@mdi/react';\r\n\r\nexport default function Database() {\r\n    const styles = createUseStyles({\r\n        tableLinks: {\r\n            marginRight: 10,\r\n        },\r\n        tableLink: {\r\n            backgroundColor: 'var(--table-primary)',\r\n            textDecoration: 'none',\r\n            fontSize: '1.25rem',\r\n            textAlign: 'left',\r\n            cursor: 'pointer',\r\n            marginBottom: 2,\r\n            padding: 15,\r\n            border: 0,\r\n            '&:hover': {\r\n                backgroundColor: 'var(--table-secondary)',\r\n            },\r\n            '&.active': {\r\n                backgroundColor: 'var(--color-primary-dark)',\r\n                color: 'var(--color-primary)',\r\n                fontWeight: 'bold',\r\n            },\r\n            '&:last-child': {\r\n                marginBottom: 0,\r\n            },\r\n        },\r\n        rows: {\r\n            maxWidth: 'calc(100vw - var(--container-margin))',\r\n            position: 'relative',\r\n            overflowX: 'auto',\r\n        },\r\n        tableWrapper: {\r\n            position: 'relative',\r\n            width: '80vw',\r\n        },\r\n    });\r\n    const classes = styles();\r\n\r\n    const { setConnections } = useContext(ConnectionsContext);\r\n    const { name, activeTable, page } = useParams();\r\n\r\n    const [columns, setColumns] = useState([]);\r\n    const [tables, setTables] = useState([]);\r\n    const [rows, setRows] = useState([]);\r\n\r\n    const [loadingDatabase, setLoadingDatabase] = useState(true);\r\n    const [loadingRows, setLoadingRows] = useState(true);\r\n    const [error, setError] = useState();\r\n\r\n    function saveRow(row) {        \r\n        setRows(p => p.map(element => element._id === row._id ? row : element));\r\n    }\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setLoadingDatabase(true);\r\n            const { code, data } = await Http.get(`/databases/${name}`);\r\n            setLoadingDatabase(false);\r\n            setTables(data);\r\n            if (code < 200 || code >= 300) {\r\n                setError('Something went wrong loading the database');\r\n            }\r\n        })();\r\n    }, [name]);\r\n\r\n    useEffect(() => {\r\n        if (tables.length > 0) {\r\n            (async () => {\r\n                    setLoadingRows(true);\r\n                    async function getRows() {\r\n                        const { code, data } = await Http.get(`/databases/${name}/${activeTable}/${page}`);\r\n                        setRows(data);\r\n                        if (code < 200 || code >= 300) {\r\n                            setError('Something went wrong loading the table rows');\r\n                        }\r\n                    }\r\n                    async function getColumns() {\r\n                        const { code, data } = await Http.get(`/databases/${name}/${activeTable}/columns`);\r\n                        setColumns(data);\r\n                        if (code < 200 || code >= 300) {\r\n                            setError('Something went wrong loading the table columns');\r\n                        }\r\n                    }\r\n                    await getColumns();\r\n                    await getRows();\r\n                    setLoadingRows(false);\r\n            })();\r\n        }\r\n    }, [name, activeTable, tables, page]);\r\n\r\n    return (\r\n        <Container>\r\n            {\r\n                loadingDatabase\r\n                    ? <Loading />\r\n                    : <>\r\n                        <PrimaryTitle>\r\n                            <Icon path={mdiDatabase} />\r\n                            <span>{name}</span>\r\n                        </PrimaryTitle>\r\n                        <Row className={classnames(classes.rows)}>\r\n                            <Col className={classnames(classes.tableLinks)} as=\"ul\">\r\n                                {\r\n                                    !error && tables.map(({ table }) => (\r\n                                        <NavLink\r\n                                            className={classnames(classes.tableLink)}\r\n                                            to={`/database/${name}/${table}`}\r\n                                            key={table}\r\n                                        >\r\n                                            {table}\r\n                                        </NavLink>\r\n                                    ))\r\n                                }\r\n                            </Col>\r\n                            <div className={classnames(classes.tableWrapper)}>\r\n                                {\r\n                                    loadingRows\r\n                                        ? <Loading className=\"center\" />\r\n                                        : <Table columns={columns} rows={\r\n                                            rows.map(row => ({ data: row, actions: {\r\n                                                save: saveRow,\r\n                                            }}))\r\n                                        } />\r\n                                }\r\n                            </div>\r\n                        </Row>\r\n                    </>\r\n            }\r\n            {!loadingDatabase && !tables.length && !error && <p className=\"errorText\">The database is completely empty</p>}\r\n            {error && <p className=\"errorText\">{error}</p>}\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useState, useRef, useEffect, useContext } from 'react';\r\nimport { ButtonOutline, Container } from './styled-components';\r\nimport { ConnectionsContext } from './contexts';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\n\r\nexport default function Start() {\r\n    const styles = createUseStyles({\r\n        start: {\r\n\r\n        },  \r\n    });\r\n    const classes = styles();\r\n\r\n    const { connections } = useContext(ConnectionsContext);\r\n\r\n    // console.log(connections);\r\n\r\n    return (\r\n        <Container className={classnames(classes.start, 'center-children')}>\r\n            <ButtonOutline as={NavLink} to=\"/database/tph\">Test TPH db</ButtonOutline>\r\n        </Container>\r\n    );\r\n}\r\n","import { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Route, Switch } from 'react-router';\r\nimport Database from './Database';\r\nimport Start from './Start';\r\nimport React from 'react';\r\n\r\nexport default function Routes() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                    <Route path=\"/database/:name/:activeTable?/:page?\" exact>\r\n                        <Database />\r\n                    </Route>\r\n                    <Route>\r\n                        <Start />\r\n                    </Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n","import { ConnectionsContextProvider } from './contexts';\nimport React, { useState, useEffect } from 'react';\nimport Routes from './Routes';\n\nexport default function App() {\n    return (\n        <ConnectionsContextProvider>\n            <Routes />\n        </ConnectionsContextProvider>\n    );\n}\n","import App from './components/App';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\n\nimport './styles/app.scss';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}