{"version":3,"sources":["components/contexts/Connections.js","components/table/Table.js","components/styled-components/index.js","classes/Http.js","components/Database.js","components/Start.js","components/Routes.js","components/App.js","index.js"],"names":["ConnectionsContext","createContext","ConnectionsContextProvider","children","useState","JSON","parse","localStorage","getItem","connections","setConnections","useEffect","setItem","stringify","Provider","value","Table","className","props","classes","createUseStyles","table","width","styles","classnames","Row","styled","div","Col","ButtonOutline","button","PrimaryTitle","h1","StyledContainer","Container","scroll","style","overflowX","Http","method","url","args","headers","standard","Accept","fetch","response","data","json","console","error","code","status","request","Database","tableLinks","marginRight","tableLink","backgroundColor","textDecoration","fontSize","textAlign","cursor","marginBottom","padding","border","color","fontWeight","useContext","useParams","name","activeTable","page","setColumns","tables","setTables","setRows","loadingDatabase","setLoadingDatabase","setLoadingRows","setError","a","get","getTables","getRows","getColumns","path","mdiLoading","spin","size","mdiDatabase","maxWidth","as","map","to","length","Start","start","NavLink","Routes","exact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.612ab250.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const ConnectionsContext = createContext();\r\n\r\nexport function ConnectionsContextProvider({ children }) {\r\n    const [connections, setConnections] = useState(JSON.parse(localStorage.getItem('connections')) ?? []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('connections', JSON.stringify(connections));\r\n    }, [connections]);\r\n\r\n    return (\r\n        <ConnectionsContext.Provider value={{ connections, setConnections }}>\r\n            {children}\r\n        </ConnectionsContext.Provider>\r\n    );\r\n}","import { createUseStyles } from 'react-jss';\r\nimport classnames from 'classnames';\r\nimport React from 'react';\r\n\r\nexport default function Table({ children, className, ...props }) {\r\n    const styles = createUseStyles({\r\n        table: {\r\n            width: '80vw',\r\n        },\r\n    });\r\n    const classes = styles();\r\n\r\n    return (\r\n        <table className={classnames(classes.table, className)} {...props}>\r\n            {children}\r\n        </table>\r\n    );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst Row = styled.div`\r\n    flex-direction: row;\r\n    display: flex;\r\n`;\r\n\r\nconst Col = styled.div`\r\n    flex-direction: column;\r\n    display: flex;\r\n`;\r\n\r\nconst ButtonOutline = styled.button`\r\n    border: 2px solid var(--color-primary);\r\n    transition: all 0.05s ease-in-out;\r\n    box-shadow: 0 0 5px 0 black;\r\n    color: var(--color-primary);\r\n    text-decoration: none;\r\n    display: inline-flex;\r\n    border-radius: 4px;\r\n    font-weight: bold;\r\n    user-select: none;\r\n    background: none;\r\n    font-size: 1rem;\r\n    cursor: pointer;\r\n    padding: 15px;\r\n    outline: 0;\r\n    &:hover {\r\n        background-color: rgba(0, 0, 0, 0.35);\r\n        color: white;\r\n    }\r\n`;\r\n\r\nconst PrimaryTitle = styled.h1`\r\n    color: var(--color-primary);\r\n    margin-bottom: 15px;\r\n    font-weight: bold;\r\n    display: flex;\r\n    font-size: 2rem;\r\n    & svg {\r\n        margin-right: 5px;\r\n        width: 2rem;\r\n    }\r\n`;\r\n\r\nconst StyledContainer = styled.div`\r\n    margin: var(--container-margin);\r\n    flex-direction: column;\r\n    display: flex;\r\n    &.center-children {\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n`;\r\nconst Container = ({ children, scroll = false, ...props }) => (\r\n    <StyledContainer style={{ overflowX: scroll ? 'auto' : null }} {...props}>\r\n        {children}\r\n    </StyledContainer>\r\n);\r\n\r\nexport {\r\n    ButtonOutline,\r\n    PrimaryTitle,\r\n    Container,\r\n    Col,\r\n    Row,\r\n};\r\n","export default class Http {\r\n    static async request(method = 'get', url = '', args = null, headers = null) {\r\n        const standard = {\r\n            method: method,\r\n            headers: {\r\n                Accept: 'application/json',\r\n                ...headers,\r\n            },\r\n        };\r\n        const response = await fetch(url, { ...args, ...standard });\r\n        let data = [];\r\n        try {\r\n            data = await response.json();\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n        return { data: data, code: response.status, response: response };\r\n    }\r\n\r\n    static async get(url, args, headers) {\r\n        return await Http.request('get', url, args, headers);\r\n    }\r\n\r\n    static async post(url, args, headers) {\r\n        return await Http.request('post', url, args, headers);\r\n    }\r\n\r\n    static async put(url, args, headers) {\r\n        return await Http.request('put', url, args, headers);\r\n    }\r\n\r\n    static async patch(url, args, headers) {\r\n        return await Http.request('patch', url, args, headers);\r\n    }\r\n\r\n    static async delete(url, args, headers) {\r\n        return await Http.request('delete', url, args, headers);\r\n    }\r\n}\r\n","import { Table, TableHead, TableHeader, TableBody, TableRow, TableCell } from './table';\r\nimport { Container, PrimaryTitle, Row, Col } from './styled-components';\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { NavLink, useParams } from 'react-router-dom';\r\nimport { mdiDatabase, mdiLoading } from '@mdi/js';\r\nimport { ConnectionsContext } from './contexts';\r\nimport { createUseStyles } from 'react-jss';\r\nimport classnames from 'classnames';\r\nimport { Http } from '../classes';\r\nimport Icon from '@mdi/react';\r\n\r\nexport default function Database() {\r\n    const styles = createUseStyles({\r\n        tableLinks: {\r\n            marginRight: 10,\r\n        },\r\n        tableLink: {\r\n            backgroundColor: 'var(--table-primary)',\r\n            textDecoration: 'none',\r\n            fontSize: '1.25rem',\r\n            textAlign: 'left',\r\n            cursor: 'pointer',\r\n            marginBottom: 2,\r\n            padding: 15,\r\n            border: 0,\r\n            '&:hover': {\r\n                backgroundColor: 'var(--table-secondary)',\r\n            },\r\n            '&.active': {\r\n                backgroundColor: 'var(--color-primary-dark)',\r\n                color: 'var(--color-primary)',\r\n                fontWeight: 'bold',\r\n            },\r\n            '&:last-child': {\r\n                marginBottom: 0,\r\n            },\r\n        },\r\n    });\r\n    const classes = styles();\r\n\r\n    const { setConnections } = useContext(ConnectionsContext);\r\n    const { name, activeTable, page } = useParams();\r\n\r\n    const [columns, setColumns] = useState([]);\r\n    const [tables, setTables] = useState([]);\r\n    const [rows, setRows] = useState([]);\r\n\r\n    const [loadingDatabase, setLoadingDatabase] = useState(true);\r\n    const [loadingRows, setLoadingRows] = useState(true);\r\n    const [error, setError] = useState();\r\n\r\n    useEffect(() => {\r\n        async function getTables() {\r\n            setLoadingDatabase(true);\r\n            const { code, data } = await Http.get(`/databases/${name}`);\r\n            setLoadingDatabase(false);\r\n            setTables(data);\r\n            if (code < 200 || code >= 300) {\r\n                setError('Something went wrong loading the database');\r\n            }\r\n        }\r\n        getTables();\r\n    }, [name]);\r\n\r\n    useEffect(() => {\r\n        (async function() {\r\n            setLoadingRows(true);\r\n            async function getRows() {\r\n                const { code, data } = await Http.get(`/databases/${name}/${activeTable}`);\r\n                setRows(data);\r\n                if (code < 200 || code >= 300) {\r\n                    setError('Something went wrong loading the table rows');\r\n                }\r\n            }\r\n            async function getColumns() {\r\n                const { code, data } = await Http.get(`/databases/${name}/${activeTable}/columns`);\r\n                setColumns(data);\r\n                if (code < 200 || code >= 300) {\r\n                    setError('Something went wrong loading the table columns');\r\n                }\r\n            }\r\n            await getColumns();\r\n            await getRows();\r\n            setLoadingRows(false);\r\n        })();\r\n    }, [name, activeTable]);\r\n    \r\n    function renderTable() {\r\n        if (!activeTable) {\r\n            return;\r\n        }\r\n\r\n        let columnsJsx = [];\r\n        for (const property in columns) {\r\n            columnsJsx.push(\r\n                <TableHeader key={property} title={columns[property].primaryKey ? 'Primary key' : null}>\r\n                    {property}\r\n                </TableHeader>\r\n            );\r\n        }\r\n\r\n        const rowsJsx = rows.map(row => {\r\n            let cells = [];\r\n            for (const property in row) {\r\n                cells.push(row[property]);\r\n            }\r\n            return (\r\n                <TableRow key={Math.random()}>\r\n                    {\r\n                        cells.map(cell => (\r\n                            <TableCell title={cell?.length >= 150 ? cell : null} key={cell}>\r\n                                {cell?.length >= 150 ? `${cell.substring(0, 150)} ...` : cell}\r\n                            </TableCell>\r\n                        ))\r\n                    }\r\n                </TableRow>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <>\r\n                <TableHead>\r\n                    {columnsJsx}\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rowsJsx}\r\n                </TableBody>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            {\r\n                loadingDatabase\r\n                    ? <Icon className=\"loading\" path={mdiLoading} spin={1} size={2} />\r\n                    : <>\r\n                        <PrimaryTitle>\r\n                            <Icon path={mdiDatabase} />\r\n                            <span>{name}</span>\r\n                        </PrimaryTitle>\r\n                        <Row style={{ overflowX: 'auto', maxWidth: 'calc(100vw - var(--container-margin))' }}>\r\n                            <Col className={classnames(classes.tableLinks)} as=\"ul\">\r\n                                {\r\n                                    tables.map(({ table }) => (\r\n                                        <NavLink\r\n                                            className={classnames(classes.tableLink)}\r\n                                            to={`/database/${name}/${table}`}\r\n                                            key={table}\r\n                                        >\r\n                                            {table}\r\n                                        </NavLink>\r\n                                    ))\r\n                                }\r\n                            </Col>\r\n                            <Table>\r\n                                <Icon className=\"loading\" path={mdiLoading} spin={1} size={2} />\r\n                            </Table>\r\n                        </Row>\r\n                    </>\r\n            }\r\n            {!loadingDatabase && !tables.length && <p className=\"errorText\">The database is completely empty</p>}\r\n            {error && <p className=\"errorText\">{error}</p>}\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useState, useRef, useEffect, useContext } from 'react';\r\nimport { ButtonOutline, Container } from './styled-components';\r\nimport { ConnectionsContext } from './contexts';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\n\r\nexport default function Start() {\r\n    const styles = createUseStyles({\r\n        start: {\r\n\r\n        },  \r\n    });\r\n    const classes = styles();\r\n\r\n    const { connections } = useContext(ConnectionsContext);\r\n\r\n    // console.log(connections);\r\n\r\n    return (\r\n        <Container className={classnames(classes.start, 'center-children')}>\r\n            <ButtonOutline as={NavLink} to=\"/database/tph\">Test TPH db</ButtonOutline>\r\n        </Container>\r\n    );\r\n}\r\n","import { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Route, Switch } from 'react-router';\r\nimport Database from './Database';\r\nimport Start from './Start';\r\nimport React from 'react';\r\n\r\nexport default function Routes() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                    <Route path=\"/database/:name/:activeTable?/:page?\" exact>\r\n                        <Database />\r\n                    </Route>\r\n                    <Route>\r\n                        <Start />\r\n                    </Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n","import { ConnectionsContextProvider } from './contexts';\nimport React, { useState, useEffect } from 'react';\nimport Routes from './Routes';\n\nexport default function App() {\n    return (\n        <ConnectionsContextProvider>\n            <Routes />\n        </ConnectionsContextProvider>\n    );\n}\n","import App from './components/App';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\n\nimport './styles/app.scss';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}