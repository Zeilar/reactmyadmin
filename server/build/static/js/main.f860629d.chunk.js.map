{"version":3,"sources":["components/contexts/Connections.js","components/table/TableHeader.js","components/table/TableHead.js","components/table/TableBody.js","components/table/TableCell.js","components/table/TableRow.js","components/table/Table.js","components/styled-components/index.js","components/misc/Loading.js","classes/Http.js","components/Database.js","components/Start.js","components/Routes.js","components/App.js","index.js"],"names":["ConnectionsContext","createContext","ConnectionsContextProvider","children","useState","JSON","parse","localStorage","getItem","connections","setConnections","useEffect","setItem","stringify","Provider","value","TableHeader","className","props","classes","createUseStyles","header","padding","styles","classnames","TableHead","thead","backgroundColor","color","fontSize","textAlign","TableBody","TableCell","data","cell","textOverflow","overflow","maxWidth","input","display","resize","dataState","setDataState","editing","setEditing","useOnclickOutside","onDoubleClick","ref","onChange","e","target","rows","Math","ceil","length","TableRow","row","Table","table","position","width","Row","styled","div","Col","ButtonOutline","button","PrimaryTitle","h1","StyledContainer","Container","scroll","style","overflowX","Loading","spinner","size","spin","opacity","database","animation","loading","margin","transform","left","top","path","mdiLoading","mdiDatabase","Http","method","url","args","headers","standard","Accept","fetch","response","json","console","error","code","status","request","Database","tableLinks","marginRight","tableLink","textDecoration","cursor","marginBottom","border","fontWeight","tableWrapper","useContext","useParams","name","activeTable","page","columns","setColumns","tables","setTables","setRows","loadingDatabase","setLoadingDatabase","loadingRows","setLoadingRows","setError","a","get","getTables","getRows","useCallback","getColumns","log","as","map","to","columnsJsx","property","push","title","primaryKey","rowsJsx","cells","substring","random","renderTable","Start","start","NavLink","Routes","exact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f860629d.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const ConnectionsContext = createContext();\r\n\r\nexport function ConnectionsContextProvider({ children }) {\r\n    const [connections, setConnections] = useState(JSON.parse(localStorage.getItem('connections')) ?? []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('connections', JSON.stringify(connections));\r\n    }, [connections]);\r\n\r\n    return (\r\n        <ConnectionsContext.Provider value={{ connections, setConnections }}>\r\n            {children}\r\n        </ConnectionsContext.Provider>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport classnames from 'classnames';\r\n\r\nexport default function TableHeader({ children, className, ...props }) {\r\n    const styles = createUseStyles({\r\n        header: {\r\n            padding: 10,\r\n        },\r\n    });\r\n    const classes = styles();\r\n\r\n    return (\r\n        <th className={classnames(classes.header, className)} {...props}>\r\n            {children}\r\n        </th>\r\n    );\r\n}\r\n","import { createUseStyles } from 'react-jss';\r\nimport classnames from 'classnames';\r\nimport React from 'react';\r\n\r\nexport default function TableHead({ children, className, ...props }) {\r\n    const styles = createUseStyles({\r\n        thead: {\r\n            backgroundColor: 'var(--color-primary-dark)',\r\n            color: 'var(--color-primary)',\r\n            fontSize: '1.25rem',\r\n            textAlign: 'left',\r\n        },\r\n    });\r\n    const classes = styles();\r\n\r\n    return (\r\n        <thead className={classnames(classes.thead, className)} {...props}>\r\n            {children}\r\n        </thead>\r\n    );\r\n}\r\n","import React, { useState, useEffect, Children } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport classnames from 'classnames';\r\n\r\nexport default function TableBody({ children, ...props }) {\r\n    return (\r\n        <tbody {...props}>\r\n            {children}\r\n        </tbody>\r\n    );\r\n}\r\n","import useOnclickOutside from 'react-cool-onclickoutside';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport classnames from 'classnames';\r\n\r\nexport default function TableCell({ children, className = '', data = '', ...props }) {\r\n    const styles = createUseStyles({\r\n        cell: {\r\n            textOverflow: 'ellipsis',\r\n            overflow: 'hidden',\r\n            maxWidth: '20rem',\r\n            padding: 10,\r\n        },\r\n        input: {\r\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n            display: 'flex',\r\n            resize: 'none',\r\n            padding: 8,\r\n        },\r\n    });\r\n    const classes = styles();\r\n\r\n    const [dataState, setDataState] = useState(data);\r\n    const [editing, setEditing] = useState(false);\r\n\r\n    const cell = useOnclickOutside(() => {\r\n        setEditing(false);\r\n        // save row\r\n    });\r\n\r\n    return (\r\n        <td className={classnames(classes.cell, className)} onDoubleClick={() => setEditing(true)} ref={cell} {...props}>\r\n            {\r\n                editing\r\n                    ? <textarea\r\n                        onChange={e => setDataState(e.target.value)}\r\n                        rows={Math.ceil(dataState.length / 17)}\r\n                        className={classnames(classes.input)}\r\n                        value={dataState}\r\n                    ></textarea>\r\n                    : children\r\n            }\r\n        </td>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport classnames from 'classnames';\r\n\r\nexport default function TableRow({ children, className, data, ...props }) {\r\n    const styles = createUseStyles({\r\n        row: {\r\n            backgroundColor: 'var(--table-primary)',\r\n            '&:nth-child(odd)': {\r\n                backgroundColor: 'var(--table-secondary)',\r\n            },\r\n        },\r\n    });\r\n    const classes = styles();\r\n\r\n    return (\r\n        <tr className={classnames(classes.row, className)} {...props}>\r\n            {children}\r\n        </tr>\r\n    );\r\n}\r\n","import { createUseStyles } from 'react-jss';\r\nimport classnames from 'classnames';\r\nimport React from 'react';\r\n\r\nexport default function Table({ children, className, ...props }) {\r\n    const styles = createUseStyles({\r\n        table: {\r\n            position: 'relative',\r\n            width: '80vw',\r\n        },\r\n    });\r\n    const classes = styles();\r\n\r\n    return (\r\n        <table className={classnames(classes.table, className)} {...props}>\r\n            {children}\r\n        </table>\r\n    );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst Row = styled.div`\r\n    flex-direction: row;\r\n    display: flex;\r\n`;\r\n\r\nconst Col = styled.div`\r\n    flex-direction: column;\r\n    display: flex;\r\n`;\r\n\r\nconst ButtonOutline = styled.button`\r\n    border: 2px solid var(--color-primary);\r\n    transition: all 0.05s ease-in-out;\r\n    box-shadow: 0 0 5px 0 black;\r\n    color: var(--color-primary);\r\n    text-decoration: none;\r\n    display: inline-flex;\r\n    border-radius: 4px;\r\n    font-weight: bold;\r\n    user-select: none;\r\n    background: none;\r\n    font-size: 1rem;\r\n    cursor: pointer;\r\n    padding: 15px;\r\n    outline: 0;\r\n    &:hover {\r\n        background-color: rgba(0, 0, 0, 0.35);\r\n        color: white;\r\n    }\r\n`;\r\n\r\nconst PrimaryTitle = styled.h1`\r\n    color: var(--color-primary);\r\n    margin-bottom: 15px;\r\n    font-weight: bold;\r\n    display: flex;\r\n    font-size: 2rem;\r\n    & svg {\r\n        margin-right: 5px;\r\n        width: 2rem;\r\n    }\r\n`;\r\n\r\nconst StyledContainer = styled.div`\r\n    margin: var(--container-margin);\r\n    flex-direction: column;\r\n    display: flex;\r\n    &.center-children {\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n`;\r\nconst Container = ({ children, scroll = false, ...props }) => (\r\n    <StyledContainer style={{ overflowX: scroll ? 'auto' : null }} {...props}>\r\n        {children}\r\n    </StyledContainer>\r\n);\r\n\r\nexport {\r\n    ButtonOutline,\r\n    PrimaryTitle,\r\n    Container,\r\n    Col,\r\n    Row,\r\n};\r\n","import { mdiDatabase, mdiLoading } from '@mdi/js';\r\nimport { createUseStyles } from 'react-jss';\r\nimport classnames from 'classnames';\r\nimport Icon from '@mdi/react';\r\nimport React from 'react';\r\n\r\nexport default function Loading({ spinner = false, size = 2, spin = 1, className = '', ...props }) {\r\n    const styles = createUseStyles({\r\n        '@keyframes pulse': {\r\n            '0%': { opacity: 1 },\r\n            '50%': { opacity: 0.1 },\r\n            '100%': { opacity: 1 },\r\n        },\r\n        database: {\r\n            animation: '$pulse 1.5s infinite',\r\n        },\r\n        loading: {\r\n            color: 'var(--color-primary)',\r\n            margin: 'auto',\r\n            '&.center': {\r\n                transform: 'translate(-50%, -50%)',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                top: '50%',\r\n            },\r\n        },\r\n    });\r\n    const classes = styles();\r\n\r\n    if (spinner) {\r\n        return <Icon className={classnames(classes.loading, className)} path={mdiLoading} size={size} spin={spin} {...props} />\r\n    }\r\n\r\n    return (\r\n        <Icon className={classnames(classes.database, classes.loading, className)} path={mdiDatabase} size={size} {...props} />\r\n    );\r\n}\r\n","export default class Http {\r\n    static async request(method = 'get', url = '', args = null, headers = null) {\r\n        const standard = {\r\n            method: method,\r\n            headers: {\r\n                Accept: 'application/json',\r\n                ...headers,\r\n            },\r\n        };\r\n        const response = await fetch(url, { ...args, ...standard });\r\n        let data = [];\r\n        try {\r\n            data = await response.json();\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n        return { data: data, code: response.status, response: response };\r\n    }\r\n\r\n    static async get(url, args, headers) {\r\n        return await Http.request('get', url, args, headers);\r\n    }\r\n\r\n    static async post(url, args, headers) {\r\n        return await Http.request('post', url, args, headers);\r\n    }\r\n\r\n    static async put(url, args, headers) {\r\n        return await Http.request('put', url, args, headers);\r\n    }\r\n\r\n    static async patch(url, args, headers) {\r\n        return await Http.request('patch', url, args, headers);\r\n    }\r\n\r\n    static async delete(url, args, headers) {\r\n        return await Http.request('delete', url, args, headers);\r\n    }\r\n}\r\n","import { Table, TableHead, TableHeader, TableBody, TableRow, TableCell } from './table';\r\nimport React, { useState, useEffect, useContext, useCallback } from 'react';\r\nimport { Container, PrimaryTitle, Row, Col } from './styled-components';\r\nimport { NavLink, useParams } from 'react-router-dom';\r\nimport { ConnectionsContext } from './contexts';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { mdiDatabase } from '@mdi/js';\r\nimport Loading from './misc/Loading';\r\nimport classnames from 'classnames';\r\nimport { Http } from '../classes';\r\nimport Icon from '@mdi/react';\r\n\r\nexport default function Database() {\r\n    const styles = createUseStyles({\r\n        tableLinks: {\r\n            marginRight: 10,\r\n        },\r\n        tableLink: {\r\n            backgroundColor: 'var(--table-primary)',\r\n            textDecoration: 'none',\r\n            fontSize: '1.25rem',\r\n            textAlign: 'left',\r\n            cursor: 'pointer',\r\n            marginBottom: 2,\r\n            padding: 15,\r\n            border: 0,\r\n            '&:hover': {\r\n                backgroundColor: 'var(--table-secondary)',\r\n            },\r\n            '&.active': {\r\n                backgroundColor: 'var(--color-primary-dark)',\r\n                color: 'var(--color-primary)',\r\n                fontWeight: 'bold',\r\n            },\r\n            '&:last-child': {\r\n                marginBottom: 0,\r\n            },\r\n        },\r\n        rows: {\r\n            maxWidth: 'calc(100vw - var(--container-margin))',\r\n            position: 'relative',\r\n            overflowX: 'auto',\r\n        },\r\n        tableWrapper: {\r\n            position: 'relative',\r\n            width: '80vw',\r\n        },\r\n    });\r\n    const classes = styles();\r\n\r\n    const { setConnections } = useContext(ConnectionsContext);\r\n    const { name, activeTable, page } = useParams();\r\n\r\n    const [columns, setColumns] = useState([]);\r\n    const [tables, setTables] = useState([]);\r\n    const [rows, setRows] = useState([]);\r\n\r\n    const [loadingDatabase, setLoadingDatabase] = useState(true);\r\n    const [loadingRows, setLoadingRows] = useState(true);\r\n    const [error, setError] = useState();\r\n\r\n    useEffect(() => {\r\n        async function getTables() {\r\n            setLoadingDatabase(true);\r\n            const { code, data } = await Http.get(`/databases/${name}`);\r\n            setLoadingDatabase(false);\r\n            setTables(data);\r\n            if (code < 200 || code >= 300) {\r\n                setError('Something went wrong loading the database');\r\n            }\r\n        }\r\n        getTables();\r\n    }, [name]);\r\n\r\n    const getRows = useCallback(() => {\r\n        (async function() {\r\n            setLoadingRows(true);\r\n            async function getRows() {\r\n                const { code, data } = await Http.get(`/databases/${name}/${activeTable}`);\r\n                setRows(data);\r\n                if (code < 200 || code >= 300) {\r\n                    setError('Something went wrong loading the table rows');\r\n                }\r\n            }\r\n            async function getColumns() {\r\n                const { code, data } = await Http.get(`/databases/${name}/${activeTable}/columns`);\r\n                setColumns(data);\r\n                if (code < 200 || code >= 300) {\r\n                    setError('Something went wrong loading the table columns');\r\n                }\r\n            }\r\n            await getColumns();\r\n            await getRows();\r\n            console.log('set false');\r\n            setLoadingRows(false);\r\n        })();\r\n    }, [name, activeTable]);\r\n\r\n    useEffect(() => {\r\n        getRows();\r\n    }, [name, activeTable, getRows]);\r\n\r\n    useEffect(() => {\r\n        getRows();\r\n    }, []);\r\n\r\n    console.log(loadingRows);\r\n    \r\n    function renderTable() {\r\n        if (!activeTable) {\r\n            return;\r\n        }\r\n\r\n        let columnsJsx = [];\r\n        for (const property in columns) {\r\n            columnsJsx.push(\r\n                <TableHeader key={property} title={columns[property].primaryKey ? 'Primary key' : null}>\r\n                    {property}\r\n                </TableHeader>\r\n            );\r\n        }\r\n\r\n        const rowsJsx = rows.map(row => {\r\n            let cells = [];\r\n            for (const property in row) {\r\n                cells.push(row[property]);\r\n            }\r\n            return (\r\n                <TableRow key={Math.random()} data={row}>\r\n                    {\r\n                        cells.map(cell => (\r\n                            <TableCell title={cell?.length >= 150 ? cell : null} key={cell} data={cell}>\r\n                                {cell?.length >= 150 ? `${cell.substring(0, 150)} ...` : cell}\r\n                            </TableCell>\r\n                        ))\r\n                    }\r\n                </TableRow>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <>\r\n                <TableHead>\r\n                    {columnsJsx}\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rowsJsx}\r\n                </TableBody>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            {\r\n                loadingDatabase\r\n                    ? <Loading />\r\n                    : <>\r\n                        <PrimaryTitle>\r\n                            <Icon path={mdiDatabase} />\r\n                            <span>{name}</span>\r\n                        </PrimaryTitle>\r\n                        <Row className={classnames(classes.rows)}>\r\n                            <Col className={classnames(classes.tableLinks)} as=\"ul\">\r\n                                {\r\n                                    tables.map(({ table }) => (\r\n                                        <NavLink\r\n                                            className={classnames(classes.tableLink)}\r\n                                            to={`/database/${name}/${table}`}\r\n                                            key={table}\r\n                                        >\r\n                                            {table}\r\n                                        </NavLink>\r\n                                    ))\r\n                                }\r\n                            </Col>\r\n                            <div className={classnames(classes.tableWrapper)}>\r\n                                {\r\n                                    loadingRows\r\n                                        ? <Loading className=\"center\" />\r\n                                        : <Table>{renderTable()}</Table>\r\n                                }\r\n                            </div>\r\n                        </Row>\r\n                    </>\r\n            }\r\n            {!loadingDatabase && !tables.length && <p className=\"errorText\">The database is completely empty</p>}\r\n            {error && <p className=\"errorText\">{error}</p>}\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useState, useRef, useEffect, useContext } from 'react';\r\nimport { ButtonOutline, Container } from './styled-components';\r\nimport { ConnectionsContext } from './contexts';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\n\r\nexport default function Start() {\r\n    const styles = createUseStyles({\r\n        start: {\r\n\r\n        },  \r\n    });\r\n    const classes = styles();\r\n\r\n    const { connections } = useContext(ConnectionsContext);\r\n\r\n    // console.log(connections);\r\n\r\n    return (\r\n        <Container className={classnames(classes.start, 'center-children')}>\r\n            <ButtonOutline as={NavLink} to=\"/database/tph\">Test TPH db</ButtonOutline>\r\n        </Container>\r\n    );\r\n}\r\n","import { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Route, Switch } from 'react-router';\r\nimport Database from './Database';\r\nimport Start from './Start';\r\nimport React from 'react';\r\n\r\nexport default function Routes() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                    <Route path=\"/database/:name/:activeTable?/:page?\" exact>\r\n                        <Database />\r\n                    </Route>\r\n                    <Route>\r\n                        <Start />\r\n                    </Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n","import { ConnectionsContextProvider } from './contexts';\nimport React, { useState, useEffect } from 'react';\nimport Routes from './Routes';\n\nexport default function App() {\n    return (\n        <ConnectionsContextProvider>\n            <Routes />\n        </ConnectionsContextProvider>\n    );\n}\n","import App from './components/App';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\n\nimport './styles/app.scss';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}